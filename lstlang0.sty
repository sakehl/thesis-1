%
% Listings package language definition for CUDA
%

\lst@definelanguage{CUDA}[ISO]{C++}{
    deletekeywords=[1]{if,else,for,while,do,switch,case},
    morekeywords=[2]{if,else,for,while,do,switch,case},
    %
    moredirectives={version,extension},
    deletekeywords={},
    morekeywords={% data types
	char1,char2,char3,char4,
	uchar1,uchar2,uchar3,uchar4,
	short1,short2,short3,short4,
	ushort1,ushort2,ushort3,ushort4,
	int1,int2,int3,int4,
	uint1,uint2,uint3,uint4,
	long1,long2,long3,long4,
	ulong1,ulong2,ulong3,ulong4,
	float1,float2,float3,float4,
	ufloat1,ufloat2,ufloat3,ufloat4,
	dim3,texture,textureReference,
	cudaError_t,cudaDeviceProp,cudaMemcpyKind,
	cudaArray,cudaChannelFormatKind,
	cudaChannelFormatDesc,cudaTextureAddressMode,
        cudaTextureFilterMode,cudaTextureReadMode},
    morekeywords={% global variable declarations
	__device__,__global__,__host__,
	__constant__,__shared__,
	__inline__,__align__,__thread__,
	__import__,__export__,__location__},
    morekeywords={% function parameters
	},
    morekeywords={% special shader variables
	},
    morekeywords={% built-in uniforms
	},
    morekeywords=[3]{% built-in constants
	__DEVICE_EMULATION__,
	cudaSuccess,
	cudaErrorMemoryAllocation,
	cudaErrorInvalidDevicePointer,
	cudaErrorInvalidSymbol,
	cudaErrorMixedDeviceExecution,
	cudaMemcpyHostToHost,
	cudaMemcpyHostToDevice,
	cudaMemcpyDeviceToHost,
	cudaMemcpyDeviceToDevice,
	cudaReadModeElementType,
	cudaReadModeNormalizedFloat,
	cudaFilterModePoint,
	cudaFilterModeLinear,
	cudaAddressModeClamp,
	cudaAddressModeWrap,
	cudaChannelFormatKindSigned,
	cudaChannelFormatKindUnsigned,
	cudaChannelFormatKindFloat},
    morekeywords=[5]{% built-in texture samplers
        gridDim,blockIdx,blockDim,threadIdx},
    morekeywords=[2]{% built-in functions
	},
    morekeywords=[4]{% swizzle operator
	}
}

