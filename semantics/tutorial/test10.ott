% minimal example from the user's guide

metavar termvar, x ::=
    {{ tex \mathit{[[termvar]]} }}
    {{ isa string }}{{ coq nat }}{{ hol string }}{{ coq-equality }}

grammar
term, t :: 'term_' ::=                                  {{ com term }}
  | x                   ::   :: Var                     {{ com variable }}
  | \ x . t             ::   :: Lam (+ bind x in t +)   {{ com lambda }}
  | t t'                ::   :: App                     {{ com application }}
  | ( t )               :: S :: Paren                   {{ icho [[t]] }}
  | { t / x } t'        :: M :: Tsub                    {{ icho (tsubt_t [[t]] [[x]] [[t']] }}

value, v :: 'value_' ::=                                {{ com value }}
  | \ x . t             ::   :: Lam                     {{ com lambda }}

type, s :: 'Type_' ::= {{ tex \mathsf{[[type]]} }}
  | unit                ::   :: Unit
  | type * type'        ::   :: Pair
  | type -> type'       ::   :: Fun

environment, G {{ tex \Gamma }}, D {{ tex \Delta }} :: 'G_' ::=
  | empty               ::   :: empty
  | G , x : T           ::   :: term


terminals :: 'terminals_' ::=
  | \                   ::   :: lambda  {{ tex \lambda }}
  | -->                 ::   :: red     {{ tex \longrightarrow }}

subrules
  v <:: t

substitutions
  single t x :: tsubt

defns
Jop :: '' ::=

  defn
  t1 --> t2             ::   :: reduce :: '' {{ com [[t1]] reduces to [[t2]] }} by

    -------------------------- :: ax_app
    (\x.t12) v2 --> {v2/x} t12

    t1 --> t1'
    -------------- :: ctx_app_fun
    t1 t --> t1' t

    t1 --> t1'
    -------------- :: ctx_app_arg
    v t1 --> v t1'

