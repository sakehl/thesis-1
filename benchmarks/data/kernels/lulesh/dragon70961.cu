#include <accelerate_cuda.h>
extern "C" __global__ void generate(const Int64 shIn0_2, const Int64 shIn0_1, const Int64 shIn0_0, const double* __restrict__ arrIn0_0, const Int64 shIn1_2, const Int64 shIn1_1, const Int64 shIn1_0, const double* __restrict__ arrIn1_3, const double* __restrict__ arrIn1_2, const double* __restrict__ arrIn1_1, const double* __restrict__ arrIn1_0, const Int64 shIn2_2, const Int64 shIn2_1, const Int64 shIn2_0, const double* __restrict__ arrIn2_2, const double* __restrict__ arrIn2_1, const double* __restrict__ arrIn2_0, const Int64 shIn3_2, const Int64 shIn3_1, const Int64 shIn3_0, const double* __restrict__ arrIn3_2, const double* __restrict__ arrIn3_1, const double* __restrict__ arrIn3_0, const Int64 shOut_2, const Int64 shOut_1, const Int64 shOut_0, double* __restrict__ arrOut_5, double* __restrict__ arrOut_4, double* __restrict__ arrOut_3, double* __restrict__ arrOut_2, double* __restrict__ arrOut_1, double* __restrict__ arrOut_0)
{
const int shapeSize = shOut_2 * (shOut_1 * shOut_0);
const int gridSize = blockDim.x * gridDim.x;
int ix;

for (ix = blockDim.x * blockIdx.x + threadIdx.x; ix < shapeSize; ix += gridSize) {
const Int64 tmp_0 = ix;
const Int64 tmp_1 = tmp_0 / shOut_0;
const Int64 tmp_2 = tmp_1 / shOut_1;
const Int64 sh2 = tmp_2 % shOut_2;
const Int64 sh1 = tmp_1 % shOut_1;
const Int64 sh0 = tmp_0 % shOut_0;
const Int64 v0 = (Int64) 1;
const Int64 v1 = (sh2 * shIn2_1 + sh1) * shIn2_0 + sh0;
const Int64 v2 = (sh2 * shIn2_1 + sh1) * shIn2_0 + (v0 + sh0);
const Int64 v3 = (sh2 * shIn2_1 + (v0 + sh1)) * shIn2_0 + (v0 + sh0);
const Int64 v4 = (sh2 * shIn2_1 + (v0 + sh1)) * shIn2_0 + sh0;
const Int64 v5 = ((v0 + sh2) * shIn2_1 + sh1) * shIn2_0 + sh0;
const Int64 v6 = ((v0 + sh2) * shIn2_1 + sh1) * shIn2_0 + (v0 + sh0);
const Int64 v7 = ((v0 + sh2) * shIn2_1 + (v0 + sh1)) * shIn2_0 + (v0 + sh0);
const Int64 v8 = ((v0 + sh2) * shIn2_1 + (v0 + sh1)) * shIn2_0 + sh0;
const double v9 = arrIn2_2[v1];
const double v10 = arrIn2_1[v1];
const double v11 = arrIn2_0[v1];
const double v12 = arrIn2_2[v2];
const double v13 = arrIn2_1[v2];
const double v14 = arrIn2_0[v2];
const double v15 = arrIn2_2[v3];
const double v16 = arrIn2_1[v3];
const double v17 = arrIn2_0[v3];
const double v18 = arrIn2_2[v4];
const double v19 = arrIn2_1[v4];
const double v20 = arrIn2_0[v4];
const double v21 = arrIn2_2[v5];
const double v22 = arrIn2_1[v5];
const double v23 = arrIn2_0[v5];
const double v24 = arrIn2_2[v6];
const double v25 = arrIn2_1[v6];
const double v26 = arrIn2_0[v6];
const double v27 = arrIn2_2[v7];
const double v28 = arrIn2_1[v7];
const double v29 = arrIn2_0[v7];
const double v30 = arrIn2_2[v8];
const double v31 = arrIn2_1[v8];
const double v32 = arrIn2_0[v8];
const double v33 = v21 + v30;
const double v34 = v22 + v31;
const double v35 = v23 + v32;
const double v36 = v33 + v27;
const double v37 = v34 + v28;
const double v38 = v35 + v29;
const double v39 = v36 + v24;
const double v40 = v37 + v25;
const double v41 = v38 + v26;
const double v42 = v9 + v12;
const double v43 = v10 + v13;
const double v44 = v11 + v14;
const double v45 = v42 + v15;
const double v46 = v43 + v16;
const double v47 = v44 + v17;
const double v48 = v45 + v18;
const double v49 = v46 + v19;
const double v50 = v47 + v20;
const double v51 = v39 - v48;
const double v52 = v40 - v49;
const double v53 = v41 - v50;
const double v54 = 0.25 * v51;
const double v55 = 0.25 * v52;
const double v56 = 0.25 * v53;
const double v57 = v15 + v27;
const double v58 = v16 + v28;
const double v59 = v17 + v29;
const double v60 = v57 + v30;
const double v61 = v58 + v31;
const double v62 = v59 + v32;
const double v63 = v60 + v18;
const double v64 = v61 + v19;
const double v65 = v62 + v20;
const double v66 = v9 + v21;
const double v67 = v10 + v22;
const double v68 = v11 + v23;
const double v69 = v66 + v24;
const double v70 = v67 + v25;
const double v71 = v68 + v26;
const double v72 = v69 + v12;
const double v73 = v70 + v13;
const double v74 = v71 + v14;
const double v75 = v63 - v72;
const double v76 = v64 - v73;
const double v77 = v65 - v74;
const double v78 = 0.25 * v75;
const double v79 = 0.25 * v76;
const double v80 = 0.25 * v77;
const double v81 = v12 + v24;
const double v82 = v13 + v25;
const double v83 = v14 + v26;
const double v84 = v81 + v27;
const double v85 = v82 + v28;
const double v86 = v83 + v29;
const double v87 = v84 + v15;
const double v88 = v85 + v16;
const double v89 = v86 + v17;
const double v90 = v18 + v30;
const double v91 = v19 + v31;
const double v92 = v20 + v32;
const double v93 = v90 + v21;
const double v94 = v91 + v22;
const double v95 = v92 + v23;
const double v96 = v93 + v9;
const double v97 = v94 + v10;
const double v98 = v95 + v11;
const double v99 = v87 - v96;
const double v100 = v88 - v97;
const double v101 = v89 - v98;
const double v102 = 0.25 * v99;
const double v103 = 0.25 * v100;
const double v104 = 0.25 * v101;
const double v105 = v79 * v56 - v80 * v55;
const double v106 = v80 * v54 - v78 * v56;
const double v107 = v78 * v55 - v79 * v54;
const double v108 = v55 * v104 - v56 * v103;
const double v109 = v56 * v102 - v54 * v104;
const double v110 = v54 * v103 - v55 * v102;
const double v111 = v103 * v80 - v104 * v79;
const double v112 = v104 * v78 - v102 * v80;
const double v113 = v102 * v79 - v103 * v78;
const double v116 = ({ const Int64 v114 = (sh2 * shIn1_1 + sh1) * shIn1_0 + sh0;  ; arrIn1_3[v114]; }) * ({ const Int64 v115 = (sh2 * shIn0_1 + sh1) * shIn0_0 + sh0;  ; arrIn0_0[v115]; });
const Int64 v117 = (sh2 * shIn3_1 + sh1) * shIn3_0 + sh0;
const Int64 v118 = (sh2 * shIn3_1 + sh1) * shIn3_0 + (v0 + sh0);
const Int64 v119 = (sh2 * shIn3_1 + (v0 + sh1)) * shIn3_0 + (v0 + sh0);
const Int64 v120 = (sh2 * shIn3_1 + (v0 + sh1)) * shIn3_0 + sh0;
const Int64 v121 = ((v0 + sh2) * shIn3_1 + sh1) * shIn3_0 + sh0;
const Int64 v122 = ((v0 + sh2) * shIn3_1 + sh1) * shIn3_0 + (v0 + sh0);
const Int64 v123 = ((v0 + sh2) * shIn3_1 + (v0 + sh1)) * shIn3_0 + (v0 + sh0);
const Int64 v124 = ((v0 + sh2) * shIn3_1 + (v0 + sh1)) * shIn3_0 + sh0;
const double v125 = arrIn3_2[v117];
const double v126 = arrIn3_1[v117];
const double v127 = arrIn3_0[v117];
const double v128 = arrIn3_2[v118];
const double v129 = arrIn3_1[v118];
const double v130 = arrIn3_0[v118];
const double v131 = arrIn3_2[v119];
const double v132 = arrIn3_1[v119];
const double v133 = arrIn3_0[v119];
const double v134 = arrIn3_2[v120];
const double v135 = arrIn3_1[v120];
const double v136 = arrIn3_0[v120];
const double v137 = arrIn3_2[v121];
const double v138 = arrIn3_1[v121];
const double v139 = arrIn3_0[v121];
const double v140 = arrIn3_2[v122];
const double v141 = arrIn3_1[v122];
const double v142 = arrIn3_0[v122];
const double v143 = arrIn3_2[v123];
const double v144 = arrIn3_1[v123];
const double v145 = arrIn3_0[v123];
const double v146 = arrIn3_2[v124];
const double v147 = arrIn3_1[v124];
const double v148 = arrIn3_0[v124];
const double v149 = 1.0 / v116;

arrOut_5[ix] = v116 / sqrt(v105 * v105 + v106 * v106 + v107 * v107);
arrOut_4[ix] = v116 / sqrt(v108 * v108 + v109 * v109 + v110 * v110);
arrOut_3[ix] = v116 / sqrt(v111 * v111 + v112 * v112 + v113 * v113);
arrOut_2[ix] = v149 * ({
const double v150 = v128 + v140;
const double v151 = v129 + v141;
const double v152 = v130 + v142;
const double v153 = v150 + v143;
const double v154 = v151 + v144;
const double v155 = v152 + v145;
const double v156 = v153 + v131;
const double v157 = v154 + v132;
const double v158 = v155 + v133;
const double v159 = v134 + v146;
const double v160 = v135 + v147;
const double v161 = v136 + v148;
const double v162 = v159 + v137;
const double v163 = v160 + v138;
const double v164 = v161 + v139;
const double v165 = v162 + v125;
const double v166 = v163 + v126;
const double v167 = v164 + v127;
const double v168 = v156 - v165;
const double v169 = v157 - v166;
const double v170 = v158 - v167;
const double v171 = 0.25 * v168;
const double v172 = 0.25 * v169;
const double v173 = 0.25 * v170;

;
v105 * v171 + v106 * v172 + v107 * v173;
});
arrOut_1[ix] = v149 * ({
const double v174 = v131 + v143;
const double v175 = v132 + v144;
const double v176 = v133 + v145;
const double v177 = v174 + v146;
const double v178 = v175 + v147;
const double v179 = v176 + v148;
const double v180 = v177 + v134;
const double v181 = v178 + v135;
const double v182 = v179 + v136;
const double v183 = v125 + v137;
const double v184 = v126 + v138;
const double v185 = v127 + v139;
const double v186 = v183 + v140;
const double v187 = v184 + v141;
const double v188 = v185 + v142;
const double v189 = v186 + v128;
const double v190 = v187 + v129;
const double v191 = v188 + v130;
const double v192 = v180 - v189;
const double v193 = v181 - v190;
const double v194 = v182 - v191;
const double v195 = 0.25 * v192;
const double v196 = 0.25 * v193;
const double v197 = 0.25 * v194;

;
v108 * v195 + v109 * v196 + v110 * v197;
});
arrOut_0[ix] = v149 * ({
const double v198 = v137 + v146;
const double v199 = v138 + v147;
const double v200 = v139 + v148;
const double v201 = v198 + v143;
const double v202 = v199 + v144;
const double v203 = v200 + v145;
const double v204 = v201 + v140;
const double v205 = v202 + v141;
const double v206 = v203 + v142;
const double v207 = v125 + v128;
const double v208 = v126 + v129;
const double v209 = v127 + v130;
const double v210 = v207 + v131;
const double v211 = v208 + v132;
const double v212 = v209 + v133;
const double v213 = v210 + v134;
const double v214 = v211 + v135;
const double v215 = v212 + v136;
const double v216 = v204 - v213;
const double v217 = v205 - v214;
const double v218 = v206 - v215;
const double v219 = 0.25 * v216;
const double v220 = 0.25 * v217;
const double v221 = 0.25 * v218;

;
v111 * v219 + v112 * v220 + v113 * v221;
});
}
}
